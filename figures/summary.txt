Most methods for metal artifact reduction will require a numerical model for a CT scan as a prerequisite. For the purposes of this project, a simple 2D model is preferable. A fan-beam geometry as seen in many real CT scanners would be the most realistic configuration. Mathematical models for CT are generally based on a parallel-beam configuration where in the lines-of-response are parameterized by a projection angle and a projection shift position. Numerically, fan-beam is simply another way to organize lines-of-response. The importance of the fanogram derives from the similarity to the way that CT measurements are actually collected. A cone-beam configuration is the most straightforward implementation for a CT scanner. The two axes in a fanogram are view-angle (similar to projection angle in parallel-beam configuration) and fan-angle. One additional hyper-parameter is needed for the fan-beam configuration: the source-to-center distance. Examples of fan-beam vs parallel-beam CT geometry are shown in the figure below.

	figure: parallel.gif
	caption: A parallel-beam CT scan. The parameters of interest are the projection angle and the projection position.
	reference: "MATLAB Documentation for fanbeam.m" https://www.mathworks.com/help/images/ref/fanbeam.html

	figure: fan.gif
	caption: A fan-beam CT scan. The parameters of interest are the fixed source-to-center distance, the view angle, and the fan angle.
	reference: <<<SAME AS ABOVE>>> "MATLAB Documentation for fanbeam.m" https://www.mathworks.com/help/images/ref/fanbeam.html

	figure: fan_vs_parallel.jpg
	caption: Slides showing a direct comparison between parallel-beam and fan-beam CT configurations.
	reference: Amos Collins "Data Acquisition, Representation and Reconstruction of medical images Application of Advanced Spectral Methods." http://slideplayer.com/slide/4261749/

An advanced CT reconstruction MATLAB package called ``The Michigan Reconstruction'' generated by Dr. Jeffrey Fessler at the University of Michigan was downloaded from the lab's website. It was determined, however, that the package was too feature-heavy for this project. Instead, a simple 2D fan-beam model has been generated from scratch. First, a tool is included to build a scan geometry structure which contains all the important parameters and meshgrids for the imaging tasks. Another piece of code was written to generate a forward projection matrix F. The use of F is shown in the equation below.

	equation: f = F*(mu)

Where mu is a (N x 1) column vector representing the pixel-grid of x-ray attenuation coefficients (mu) in x-y space, f is a (M x 1) column vector representing the pixel-grid of measured space-integrated x-ray attenuation coefficients (g-values) in fanogram-space (view angle x fan angle), and F is an (M x N) forward projection matrix which transforms an image into the fanogram measurments that would be collected for that image. The algorithm used to generate F is very slow since F is a large matrix and must be organized as a MATLAB sparse matrix to save space. Each line of response is treated as an ideal line in two dimensions which passes through the x-y image space which is broken up into pixel basis functions. F(i,j) is therefore proportional to the total distance that the i'th line of response travels in the j'th pixel. Since the fanogram and sinogram are both made up of g-values, the fanogram can be re-binned by computing the sinogram parameters (s,phi) for each pixel in the fanogram image and using a scattered linear interpolant onto an evenly-spaced grid in sinogram-space. Once the sinogram is computed, off-the-shelf CT reconstruction alorithms such as MATLAB's iradon can be used to recover a reconstructed estimate of (mu). Representations of a smiley-face image in all relevant imaging spaces are shown below.

	figure: example.png
	caption: The original 2D image in x-y-space (top left), the synthetic measurements collected by a simulated scanner in fanogram-space (top-right), the measurements re-binned into sinogram-space (bottom right), and the reconstructed image generated by applying MATLAB's iradon to the sinogram (bottom left).

	This code is a prerequisite to begin our investigation into metal artifact reduction. The following adjustments will likely be made to this model throughout the course of this project.
	
	outline:
		1) Model the measurement noise 
			a) is additive-white-gaussian noise appropriate?
		2) Model the anomalous effects of metal in the forward projector
			a) How far does the SNR drop for lines-of-response which intersect metal?
			b) Can the effects me modeled as high attenuation only?
			c) Do we need to consider scattering effects on other detectors.
		3) Adjust the reconstruction algorithm to account for the effects of (1) and (2)
			a) Iterative reconstruction with penalties and constraints?
			b) Non-linear projection-stitching methods
			c) <<<insert other methods from lit. review>>>
	
	The goal of our project is to develop an appropriate numerical model and reconstruction algorithm to reflect these considerations. The focus will be on implementing techniques which are already in use to solve this problem.

---------------------------------------------------
	appendices: 	buildScanGeometry.m
			buildForwardProjector.m
			buildFanogram.m
			fanogramToSinogram.m
			example.m














